#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ПользователиПустаяСсылка;                  // Пустая ссылка на элемент справочника "Пользователи".
Перем ПеречисленияТипы Экспорт;                  // Перечисление ТипыОбъектов.

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Передавать расширение не требуется
Функция ПолучитьОбъектыКонфигурацииПоОтветственному(Версия, Ответственный)
	
	Если Ответственный = Справочники.Пользователи.ПустаяСсылка() Тогда
		
		ТаблицаОбъектов = Новый ТаблицаЗначений;
		ТаблицаОбъектов.Колонки.Добавить("Ссылка");
		Возврат ТаблицаОбъектов;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СтруктураКонфигурации.Ссылка
	|ИЗ
	|	Справочник.СтруктураКонфигурации КАК СтруктураКонфигурации
	|ГДЕ
	|	СтруктураКонфигурации.Владелец = &Версия
	|	И СтруктураКонфигурации.Ответственный = &Ответственный
	|	И СтруктураКонфигурации.ТипОбъекта <> ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Конфигурация)
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураКонфигурации.НомерПоПорядку";

	Запрос.УстановитьПараметр("Версия", Версия);
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьПодчиненныеОбъектыПодсистемы(ОбъектСсылка, ОтветственныйСсылка = Неопределено)
	
	Если (ОбъектСсылка.ТипОбъекта <> Перечисления.ТипыОбъектов.Подсистема)
		ИЛИ (ОтветственныйСсылка = Справочники.Пользователи.ПустаяСсылка()) Тогда
		
		ТаблицаОбъектов = Новый ТаблицаЗначений;
		ТаблицаОбъектов.Колонки.Добавить("Ссылка");
		Возврат ТаблицаОбъектов;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ТабличнаяЧасть.Ссылка.Ответственный КАК Ответственный
	|ИЗ
	|	Справочник.СтруктураКонфигурации.Подсистемы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка.Владелец = &Владелец
	|	И ТабличнаяЧасть.Подсистема = &Подсистема
	|" + ?(ОтветственныйСсылка = Неопределено, "", " И ТабличнаяЧасть.Ссылка.Ответственный = &Ответственный");
	
	Запрос.УстановитьПараметр("Владелец", ОбъектСсылка.Владелец);
	Запрос.УстановитьПараметр("Подсистема", ОбъектСсылка);
	Запрос.УстановитьПараметр("Ответственный", ОтветственныйСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьПодчиненныеОбъектыПоРодителюРекурсивно(РодительСсылка, Владелец, Ответственный = Неопределено,
	ТаблицаОбъектов = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СтруктураКонфигурации.Ссылка КАК Ссылка,
	|	СтруктураКонфигурации.Ссылка.Ответственный КАК Ответственный
	|ИЗ
	|	Справочник.СтруктураКонфигурации КАК СтруктураКонфигурации
	|ГДЕ
	|	СтруктураКонфигурации.Владелец = &ВладелецСсылка
	|	И СтруктураКонфигурации.Родитель = &РодительСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураКонфигурации.НомерПоПорядку";
	
	Запрос.УстановитьПараметр("РодительСсылка", РодительСсылка);
	Запрос.УстановитьПараметр("ВладелецСсылка", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если (Ответственный = Неопределено) ИЛИ (Ответственный = Выборка.Ответственный) Тогда
			НоваяСтрока = ТаблицаОбъектов.Добавить();
			НоваяСтрока.Ссылка = Выборка.Ссылка;
			НоваяСтрока.Ответственный = Выборка.Ответственный;
		КонецЕсли;
		ПолучитьПодчиненныеОбъектыПоРодителюРекурсивно(Выборка.Ссылка, Владелец, Ответственный, ТаблицаОбъектов);
	КонецЦикла;
	
	Возврат ТаблицаОбъектов;
	
КонецФункции

Функция ПолучитьПодчиненныеОбъектыПоРодителю(РодительСсылка, Ответственный = Неопределено)
	
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("Ссылка");
	ТаблицаОбъектов.Колонки.Добавить("Ответственный");
	
	Если Ответственный = Справочники.Пользователи.ПустаяСсылка() Тогда
		Возврат ТаблицаОбъектов;
	КонецЕсли;
	
	Возврат ПолучитьПодчиненныеОбъектыПоРодителюРекурсивно(РодительСсылка, РодительСсылка.Владелец, Ответственный, ТаблицаОбъектов);
	
КонецФункции

// Меняет ответственного у объекта независимо от типа объекта.
//
Функция ИзменитьОтветственного(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный = Неопределено,
	ФлагИзменятьОтветственногоЗаОбъект = Истина, ФлагИзменятьОтветственногоЗаПодчиненныеОбъекты = Истина) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	#Если Клиент Тогда
	СтарыйОтветственныйТекст = ?(ЗначениеЗаполнено(СтарыйОтветственный), СтарыйОтветственный, НСтр("ru='не заполнен'"));
	ТекстСостояния = НСтр("ru='Изменение ответственного <%1> -> <%2> для объекта: %3'");
	ТекстСостояния = СтрШаблон(ТекстСостояния, СтарыйОтветственныйТекст, НовыйОтветственный, ОбъектСсылка.Путь);
	Состояние(ТекстСостояния);
	#КонецЕсли
	
	Если ОбъектСсылка.ТипОбъекта = Перечисления.ТипыОбъектов.Конфигурация Тогда
		ИзменитьОтветственногоЗаКонфигурацию(ОбъектСсылка, НовыйОтветственный);
		Возврат Истина;
	ИначеЕсли ОбъектСсылка.ТипОбъекта = Перечисления.ТипыОбъектов.Подсистема Тогда
		ИзменитьОтветственногоЗаПодсистему(ОбъектСсылка, НовыйОтветственный);
	ИначеЕсли ОбъектСсылка.ТипОбъекта = Перечисления.ТипыОбъектов.ВеткаМетаданных Тогда
		Возврат Ложь;
	Иначе
		ИзменитьОтветственногоЗаОбъект(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
			ФлагИзменятьОтветственногоЗаОбъект, ФлагИзменятьОтветственногоЗаПодчиненныеОбъекты);
	КонецЕсли;
	
	ИзменитьОтветственногоЗаОшибкиОбъекта(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный);
	ИзменитьОтветственногоЗаОшибкиОбъекта(ОбъектСсылка, НовыйОтветственный, НовыйОтветственный);
	
КонецФункции

Функция ИзменитьОтветственногоЗаОбъектыКонфигурации(ОбъектСсылка, НовыйОтветственный, ОтветственныйДляОтбора)
	
	ТаблицаОбъектов = ПолучитьОбъектыКонфигурацииПоОтветственному(ОбъектСсылка.Владелец, ОтветственныйДляОтбора);
	Для Каждого Объект Из ТаблицаОбъектов Цикл
		ИзменитьОтветственного(Объект.Ссылка, НовыйОтветственный);
	КонецЦикла;
	
КонецФункции

Функция ИзменитьОтветственногоЗаКонфигурацию(ОбъектСсылка, НовыйОтветственный)
	
	Если ОбъектСсылка.ТипОбъекта <> Перечисления.ТипыОбъектов.Конфигурация Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтарыйОтветственный = ОбъектСсылка.Ответственный;
	Объект = ОбъектСсылка.ПолучитьОбъект();
	Объект.Ответственный = НовыйОтветственный;
	Объект.Записать();
	
	ИзменитьОтветственногоЗаОбъектыКонфигурации(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный);
	ИзменитьОтветственногоЗаОбъектыКонфигурации(ОбъектСсылка, НовыйОтветственный, НовыйОтветственный);
	
	ИзменитьОтветственногоЗаОшибкиОбъекта(Неопределено, НовыйОтветственный, СтарыйОтветственный);
	ИзменитьОтветственногоЗаОшибкиОбъекта(Неопределено, НовыйОтветственный, НовыйОтветственный);
	
	Возврат Истина;
	
КонецФункции

Функция ИзменитьОтветственногоЗаПодчиненныеПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный)
	
	ТаблицаПодсистем = ПолучитьПодчиненныеОбъектыПоРодителю(ОбъектСсылка);
	Для Каждого Подсистема Из ТаблицаПодсистем Цикл
		
		ПодсистемаСсылка = Подсистема.Ссылка;
		
		Если НЕ ЗначениеЗаполнено(ПодсистемаСсылка.Ответственный) Тогда
			ФлагМенятьОтветственногоЗаПодсистему = Ложь;
		ИначеЕсли ПодсистемаСсылка.Ответственный = СтарыйОтветственный Тогда
			ФлагМенятьОтветственногоЗаПодсистему = Истина;
		ИначеЕсли ПодсистемаСсылка.Ответственный <> НовыйОтветственный Тогда
			ФлагМенятьОтветственногоЗаПодсистему = Ложь;
		Иначе
			ФлагМенятьОтветственногоЗаПодсистему = Истина;
		КонецЕсли;
		
		ИзменитьОтветственногоЗаПодсистемуИОбъектыПодсистемы(ПодсистемаСсылка, НовыйОтветственный, СтарыйОтветственный,
			ФлагМенятьОтветственногоЗаПодсистему);
		
	КонецЦикла;
	
КонецФункции

Функция ИзменитьОтветственногоЗаПодсистемуИОбъектыПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
	ФлагМенятьОтветственногоЗаПодсистему = Истина, ФлагМенятьОтветственногоЗаОбъектыПодсистемы = Истина)
	
	Если ОбъектСсылка.ТипОбъекта <> Перечисления.ТипыОбъектов.Подсистема Тогда
		Возврат Ложь;
	КонецЕсли;

	Если ФлагМенятьОтветственногоЗаПодсистему Тогда
		ИзменитьОтветственногоПоРодителю(ОбъектСсылка, НовыйОтветственный);
	КонецЕсли;
	
	Если ФлагМенятьОтветственногоЗаОбъектыПодсистемы Тогда
		ИзменитьОтветственногоЗаОбъектыПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
			СтарыйОтветственный);
		ИзменитьОтветственногоЗаОбъектыПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
			НовыйОтветственный);
	КонецЕсли;
	
КонецФункции

Функция ИзменитьОтветственногоЗаПодсистему(ОбъектСсылка, НовыйОтветственный)
	
	СтарыйОтветственный = ОбъектСсылка.Ответственный;
	ИзменитьОтветственногоЗаПодсистемуИОбъектыПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный);
	ИзменитьОтветственногоЗаПодчиненныеПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный);
	
КонецФункции

Функция ИзменитьОтветственногоЗаОбъектыПодсистемы(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
	ОтветственныйДляОтбора)
	
	ТаблицаОбъектов = ПолучитьПодчиненныеОбъектыПодсистемы(ОбъектСсылка);
	Для Каждого Объект Из ТаблицаОбъектов Цикл
		ФлагМенятьОтветственногоЗаОбъект = (ЗначениеЗаполнено(Объект.Ответственный))
			И (Объект.Ответственный = ОтветственныйДляОтбора);
		ИзменитьОтветственного(Объект.Ссылка, НовыйОтветственный, СтарыйОтветственный, ФлагМенятьОтветственногоЗаОбъект);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ИзменитьОтветственногоЗаОбъект(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный = Неопределено,
	ФлагМенятьОтветственногоЗаОбъект = Истина, ФлагМенятьОтветственногоЗаПодчиненныеОбъекты = Истина)
	
	Если СтарыйОтветственный = Неопределено Тогда
		СтарыйОтветственный = ОбъектСсылка.Ответственный;
	КонецЕсли;
	
	Если ФлагМенятьОтветственногоЗаОбъект Тогда
		ИзменитьОтветственногоПоРодителю(ОбъектСсылка, НовыйОтветственный);
	КонецЕсли;
	
	Если ФлагМенятьОтветственногоЗаПодчиненныеОбъекты Тогда
		ИзменитьОтветственногоЗаПодчиненныеОбъекты(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
			СтарыйОтветственный);
		ИзменитьОтветственногоЗаПодчиненныеОбъекты(ОбъектСсылка, НовыйОтветственный, СтарыйОтветственный,
			НовыйОтветственный);
	КонецЕсли;
	
КонецФункции

Функция ИзменитьОтветственногоЗаПодчиненныеОбъекты(РодительСсылка, НовыйОтветственный, СтарыйОтветственный,
	ОтветственныйДляОтбора)
	
	ТаблицаОбъектов = ПолучитьПодчиненныеОбъектыПоРодителю(РодительСсылка);
	Для Каждого Объект Из ТаблицаОбъектов Цикл
		ФлагМенятьОтветственногоЗаОбъект = (ЗначениеЗаполнено(Объект.Ответственный))
			И (Объект.Ответственный = ОтветственныйДляОтбора);
		ИзменитьОтветственного(Объект.Ссылка, НовыйОтветственный, СтарыйОтветственный,
			ФлагМенятьОтветственногоЗаОбъект, Ложь);
	КонецЦикла;
	
КонецФункции

Функция ПолучитьОтветственногоПоРодителю(ОбъектСсылка, НовыйОтветственный)
	
	ОбъектСсылкаКопия = ОбъектСсылка;
	
	Пока Истина Цикл
		
		РодительСсылка = ОбъектСсылкаКопия.Родитель;
		Если Не ЗначениеЗаполнено(РодительСсылка) Тогда
			Возврат Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
		
		ОтветственныйЗаРодителя = РодительСсылка.Ответственный;
		
		Если ЗначениеЗаполнено(ОтветственныйЗаРодителя) Тогда
			НовыйОтветственныйЗаОбъект = ?(ОтветственныйЗаРодителя = НовыйОтветственный, ПользователиПустаяСсылка,
				НовыйОтветственный);
			Прервать;
		КонецЕсли;
		
		Если РодительСсылка.ТипОбъекта = Перечисления.ТипыОбъектов.ВеткаМетаданных Тогда
			
			КоличествоПодсистемОбъекта = ОбъектСсылкаКопия.Подсистемы.Количество();
			Если КоличествоПодсистемОбъекта = 0 Тогда
				
				СсылкаНаКонфигурацию = ПолучитьЭлементСтруктурыМетаданных(ОбъектСсылкаКопия.Владелец,,,
					Перечисления.ТипыОбъектов.Конфигурация, ОбъектСсылка.Расширение);
				ОтветственныйЗаКонфигурацию = СсылкаНаКонфигурацию.Ответственный;
				НовыйОтветственныйЗаОбъект = ?(НовыйОтветственный = ОтветственныйЗаКонфигурацию, ПользователиПустаяСсылка,
					НовыйОтветственный);
				
			ИначеЕсли КоличествоПодсистемОбъекта = 1 Тогда
				
				ПодсистемаОбъекта = ОбъектСсылкаКопия.Подсистемы[0].Подсистема;
				
				ОтветственныйЗаПодсистему = ПодсистемаОбъекта.Ответственный;
				Если НЕ ЗначениеЗаполнено(ОтветственныйЗаПодсистему) Тогда
					НовыйОтветственныйЗаОбъект = ПолучитьОтветственногоПоРодителю(ПодсистемаОбъекта, НовыйОтветственный);
				ИначеЕсли ОтветственныйЗаПодсистему = НовыйОтветственный Тогда
					НовыйОтветственныйЗаОбъект = ПользователиПустаяСсылка;
				Иначе
					НовыйОтветственныйЗаОбъект = НовыйОтветственный;
				КонецЕсли;
				
			Иначе
				НовыйОтветственныйЗаОбъект = НовыйОтветственный;
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
		ОбъектСсылкаКопия = РодительСсылка;
	
	КонецЦикла;
	
	Возврат НовыйОтветственныйЗаОбъект;
	
КонецФункции

Функция ИзменитьОтветственногоПоРодителю(ОбъектСсылка, НовыйОтветственный) Экспорт

	НовыйОтветственныйЗаОбъект = ПолучитьОтветственногоПоРодителю(ОбъектСсылка, НовыйОтветственный);
	Если ОбъектСсылка.Ответственный = НовыйОтветственныйЗаОбъект Тогда
		Возврат Ложь;
	КонецЕсли;

	Объект = ОбъектСсылка.ПолучитьОбъект();
	Объект.Ответственный = НовыйОтветственныйЗаОбъект;
	Объект.Записать();
	
	Возврат Истина;

КонецФункции

Функция ПолучитьТаблицуОшибок(ОбъектСсылка = Неопределено, Ответственный = Неопределено)
	
	ЗапросОшибки = Новый Запрос;
	ЗапросОшибки.Текст = "
	|ВЫБРАТЬ
	|	НайденныеОшибки.Объект,
	|	НайденныеОшибки.Номер,
	|	НайденныеОшибки.Правило,
	|	НайденныеОшибки.Ответственный
	|ИЗ
	|	РегистрСведений.НайденныеОшибки КАК НайденныеОшибки
	|ГДЕ
	|	НайденныеОшибки.Объект.Владелец = &Версия
	|	" + ?(ОбъектСсылка = Неопределено, "", "И НайденныеОшибки.Объект = &Объект") + "
	|	" + ?(Ответственный = Неопределено, "", "И НайденныеОшибки.Ответственный = &Ответственный ");
		
	ЗапросОшибки.УстановитьПараметр("Версия", Версия);
	ЗапросОшибки.УстановитьПараметр("Объект", ОбъектСсылка);
	ЗапросОшибки.УстановитьПараметр("Ответственный", Ответственный);
	
	Возврат ЗапросОшибки.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТаблицуОшибокОбъекта(ОбъектСсылка, Ответственный)
	
	Если Ответственный = Справочники.Пользователи.ПустаяСсылка() Тогда
		ТаблицаОшибок = Новый ТаблицаЗначений;
		ТаблицаОшибок.Колонки.Добавить("Объект");
		ТаблицаОшибок.Колонки.Добавить("Номер");
		ТаблицаОшибок.Колонки.Добавить("Правило");
		ТаблицаОшибок.Колонки.Добавить("Ответственный");
		Возврат ТаблицаОшибок;
	КонецЕсли;
	
	Возврат ПолучитьТаблицуОшибок(ОбъектСсылка, Ответственный);
	
КонецФункции

Функция ИзменитьОтветственногоЗаОшибкиОбъекта(ОбъектСсылка, НовыйОтветственный, ОтветственныйДляОтбора)
	
	СтруктураОшибки = Новый Структура;
	
	ТаблицаОшибок = ПолучитьТаблицуОшибокОбъекта(ОбъектСсылка, ОтветственныйДляОтбора);
	Для Каждого Ошибка Из ТаблицаОшибок Цикл
		СтруктураОшибки.Вставить("Объект", Ошибка.Объект);
		СтруктураОшибки.Вставить("Номер", Ошибка.Номер);
		СтруктураОшибки.Вставить("Правило", Ошибка.Правило);
		СтруктураОшибки.Вставить("Ответственный", ОтветственныйДляОтбора);
		ИзменитьОтветственногоЗаОшибку(СтруктураОшибки, НовыйОтветственный);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Меняет ответственного за ошибку
//
Функция ИзменитьОтветственногоЗаОшибку(СтруктураОшибки, НовыйОтветственный) Экспорт
	
	НовыйОтветственныйЗаОшибку = ПолучитьОтветственногоЗаОшибку(СтруктураОшибки, НовыйОтветственный);
	Если СтруктураОшибки.Ответственный = НовыйОтветственныйЗаОшибку Тогда
		Возврат Ложь;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.НайденныеОшибки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номер.Установить(СтруктураОшибки.Номер);
	НаборЗаписей.Отбор.Правило.Установить(СтруктураОшибки.Правило);
	НаборЗаписей.Отбор.Объект.Установить(СтруктураОшибки.Объект);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаНабораЗаписей = НаборЗаписей[0];
	СтрокаНабораЗаписей.Ответственный = НовыйОтветственныйЗаОшибку;
	
	НаборЗаписей.Записать();
	
	Если СтруктураОшибки.Свойство("Комментарий") Тогда
		ЗаписатьКомментарийОшибки(СтруктураОшибки.Номер, СтруктураОшибки.Комментарий, СтруктураОшибки.Объект);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает ответственного за ошибку вверх по иерархии
//
Функция ПолучитьОтветственногоЗаОшибку(СтруктураОшибки, НовыйОтветственный) Экспорт
	
	ОтветственныйЗаОбъектОшибки = СтруктураОшибки.Объект.Ответственный;
	Если НЕ ЗначениеЗаполнено(ОтветственныйЗаОбъектОшибки) Тогда
		НовыйОтветственныйЗаОшибку = ПолучитьОтветственногоПоРодителю(СтруктураОшибки.Объект, НовыйОтветственный);
	ИначеЕсли ОтветственныйЗаОбъектОшибки = НовыйОтветственный Тогда
		НовыйОтветственныйЗаОшибку = ПользователиПустаяСсылка;
	Иначе
		НовыйОтветственныйЗаОшибку = НовыйОтветственный;
	КонецЕсли;
	
	Возврат НовыйОтветственныйЗаОшибку;
	
КонецФункции

#КонецОбласти

#Область Инициализация

ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();

ПеречисленияТипы = Перечисления.ТипыОбъектов;

#КонецОбласти

#КонецЕсли
