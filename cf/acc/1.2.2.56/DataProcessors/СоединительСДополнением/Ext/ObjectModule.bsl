#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ПроверяемаяКонфигурация Экспорт; // Текущая проверяемая конфигурация
Перем ПроверяемаяВерсия Экспорт;       // Текущая проверяемая версия конфигурации
Перем Объект Экспорт;                  // Проверяемый объект
Перем ОтветственныйЗаОбъект Экспорт;   // Ответственный за проверяемый объект
Перем ОбъектМетаданныхОбъекта Экспорт; // Объект метаданных для проверяемого объекта
Перем ДанныеДополнения Экспорт;        // Данные дополнения, которым выполняется проверка
Перем Дополнение Экспорт;              // Дополнение, которым выполняется проверка

Перем ТипОбъекта Экспорт;              // Перечисление ТипОбъекта
Перем ВыводитьВФорму Экспорт;          // Выводить результат в форму обработки (при тесте)
Перем ПравилоДляПроверки Экспорт;      // Правило. вызвавшее проверку дополнением
Перем МинимальнаяКритичность Экспорт;  // Минимальная критичность недочетов, фиксируемых при проверке

Перем Ядро Экспорт;                    // Обработка ядра

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает в обработке текущий проверяемый объект
//
// Параметры:
//  лОбъект           - СправочникСсылка.СтруктураКонфигурации, проверяемый объект,
//  лДанныеДополнения - СправочникСсылка.Дополнения, дополнение, которым будет проверяться объект.
//
Процедура ВыполнитьПроверку(лОбъект, лДанныеДополнения) Экспорт
	
	#Если Клиент Тогда
	
	ПроверяемаяКонфигурация = Конфигурация;
	ПроверяемаяВерсия = Версия;
	
	Объект = лОбъект;
	ДанныеДополнения = лДанныеДополнения;
	Имя = ДанныеДополнения.Наименование;
	
	// Сохраняем дополнение на диск.
	ИФД = КаталогВременныхФайлов() + СтрЗаменить(СтрЗаменить(СтрЗаменить(Имя, " ", ""), ".", ""), ",", "") + ".epf";
	
	ДвоичныеДанныеДополнения = ДанныеДополнения.Содержание.Получить();
	Если ТипЗнч(ДвоичныеДанныеДополнения) <> Тип("ДвоичныеДанные") Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Отсутствует содержание дополнения <%1>'"), Имя);
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанныеДополнения.Записать(ИФД);
	Дополнение = ВнешниеОбработки.Создать(ИФД);
	
	// Запускаем дополнение на проверку.
	Попытка
		РезультатПроверки = Дополнение.апк_ВыполнитьПроверку(ЭтотОбъект);
	Исключение
		ТекстСообщения = НСтр("ru='Ошибка при попытке выполнить проверку дополнением <%1>.
			|Объект, при проверке которого возникла ошибка: %2.%3.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Имя, Объект.Родитель.Наименование, Объект.Наименование);
		
		Сообщить(ТекстСообщения);
	КонецПопытки
	
	#КонецЕсли
	
КонецПроцедуры

// Заполняет структуру типа объекта по объекту.
//
Процедура ЗаполнитьТипОбъекта()
	
	ТипОбъекта = Новый Структура;
	
	Для Каждого ИмяЗначения Из Метаданные.Перечисления.ТипыОбъектов.ЗначенияПеречисления Цикл
		ТипОбъекта.Вставить(ИмяЗначения.Имя, Перечисления.ТипыОбъектов[ИмяЗначения.Имя]);
	КонецЦикла;
	
	ТипОбъекта.Вставить("ПустаяСсылка", Перечисления.ТипыОбъектов.ПустаяСсылка());
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЗаполнитьТипОбъекта();
ВыводитьВФорму = Ложь;
МинимальнаяКритичность = 0;

#КонецОбласти

#КонецЕсли
