
#Область СлужебныеПроцедурыИФункции

// Процедура предназначена для распаковки архива.
//
// Параметры:
// ИмяФайла - имя файла архива.
// ИмяКаталога - каталог, в который распаковывается архив.
Процедура РаспаковатьАрхив(ИмяФайла, Каталог)
	
	Если Не ФайлСуществует(Каталог) Тогда
		СоздатьКаталог(Каталог);
	КонецЕсли;
	
	ЧтениеZipФайла = Новый ЧтениеZipФайла(ИмяФайла);
	ЧтениеZipФайла.ИзвлечьВсе(Каталог);
	ЧтениеZipФайла.Закрыть();
	
КонецПроцедуры

Процедура ДобавитьФайлВАрхив(ФайлАрхива, ФайлОсобенностей) Экспорт
	
	ЗаписьZipФайла = Новый ЗаписьZipФайла(ФайлАрхива);
	ЗаписьZipФайла.Добавить(ФайлОсобенностей);
	ЗаписьZipФайла.Записать();
	
КонецПроцедуры

Функция ПолучитьФайлИзАрхива(ФайлАрхива) Экспорт
	
	ФайлОсобенностей = "";
	
	ВременныйКаталог = ПолучитьИмяВременногоФайла();
	РаспаковатьАрхив(ФайлАрхива, ВременныйКаталог);
	
	МассивФайлов = НайтиФайлы(ВременныйКаталог, "*.xml");
	Если МассивФайлов.Количество() > 0 Тогда
		ФайлОсобенностей = МассивФайлов[0].ПолноеИмя;
	КонецЕсли;
	
	Возврат ФайлОсобенностей;
	
КонецФункции

// Открывает диалоговое окно выбора файла с соответствующими настройками.
// Параметры:
//   НачальноеИмяФайла - Имя файла, которое надо открыть.
//   РежимВыгрузки - Варианты диалога выбора файла.
//   Заголовок - заголовок окна выбора файла.
//   Фильтр - фильтр файлов в окне выбора файла.
//
Функция ВыборФайла(НачальноеИмяФайла = "", РежимВыгрузки = Истина, Заголовок = "", Фильтр = "") Экспорт
	
	СтандартнаяОбработка = Ложь;
	РежимДиалога = ?(РежимВыгрузки, РежимДиалогаВыбораФайла.Сохранение, РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалога);
	
	Если Не РежимВыгрузки Тогда
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	КонецЕсли;
	
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = Заголовок;
	ДиалогВыбораФайла.ПолноеИмяФайла = НачальноеИмяФайла;
	
	ДиалогВыбораФайла.Фильтр = Фильтр;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Возврат ДиалогВыбораФайла.ПолноеИмяФайла;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

// Загружает особенности из файла в конфигурацию.
// Параметры:
//   ИмяФайлаОсобенностей - имя файла откуда будут загружаться особенности.
//   Конфигурация - Конфигурация, куда будут загружаться особенности.
Процедура ЗагрузитьОсобенности(Знач ИмяФайлаОсобенностей, Конфигурация, ТекстОшибки = "", ОтборПоКорню = Ложь,
	Расширение = Неопределено) Экспорт
	
	Если СтрДлина(ИмяФайлаОсобенностей) = 0 Тогда
		ТекстОшибки = НСтр("ru='Не задано имя файла выгрузки'");
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(ИмяФайлаОсобенностей);
	Если Не Файл.Существует() Тогда
		ТекстОшибки = НСтр("ru='Не найден файл для загрузки данных:'") + " " + ИмяФайлаОсобенностей;
		Возврат;
	КонецЕсли;
	
	ЭтоАрхив = Ложь;
	Если Файл.Расширение = ".zip" Тогда
		ЭтоАрхив = Истина;
		
		ИмяФайлаОсобенностей = ПолучитьФайлИзАрхива(ИмяФайлаОсобенностей);
		Если ПустаяСтрока(ИмяФайлаОсобенностей) Тогда
			ТекстОшибки = НСтр("ru='В указанном архиве не содержится xml-файлов с особенностями.'");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Версия = НайтиПоследнююВерсию(Конфигурация);
	Если НЕ ЗначениеЗаполнено(Версия) Тогда
		ТекстОшибки =
			НСтр("ru='Не удалось загрузить особенности конфигурации <%1>, т.к. не найдено версий с собранными данными.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Конфигурация.Наименование);
		Возврат;
	КонецЕсли;
	
	Форма = Обработки.УниверсальныйОбменДаннымиXML.ПолучитьФорму("Форма");
	Форма.РежимОбмена = "Загрузка";
	Форма.Конфигурация = Конфигурация;
	Форма.Версия = Версия;
	Форма.ОтборПоКорню = ОтборПоКорню;
	Форма.Расширение = Расширение;
	Форма.ИмяФайлаОбмена = ИмяФайлаОсобенностей;
	
	ВерсияФайлаОбменаДанными1_1_15 = ПравилаОбменаДаннымиВерсии1_1_15ИлиВыше(ИмяФайлаОсобенностей);
	Если ВерсияФайлаОбменаДанными1_1_15 Тогда
		ДвоичныеДанные = Обработки.УниверсальныйОбменДаннымиXML.ПолучитьМакет("ОбработчикиПравилОбменаДанными_1_1_15");
	Иначе
		ДвоичныеДанные = Обработки.УниверсальныйОбменДаннымиXML.ПолучитьМакет("ОбработчикиПравилОбменаДанными_1_1_14");
	КонецЕсли;
	
	ИмяВнешнейОбработки = ПолучитьИмяВременногоФайла("epf");
	ДвоичныеДанные.Записать(ИмяВнешнейОбработки);
	Форма.ИмяФайлаВнешнейОбработкиОбработчиковСобытий = ИмяВнешнейОбработки;
	Форма.ФлагРежимОтладкиОбработчиков = Истина;
	Форма.НеВыводитьНикакихИнформационныхСообщенийПользователю = Истина;
	
	Форма.ВыполнитьЗагрузкуИзФормы();
	
	ФайлУдалить(ИмяВнешнейОбработки);
	
	Если ЭтоАрхив Тогда
		ФайлУдалить(ИмяФайлаОсобенностей);
	КонецЕсли;
	
КонецПроцедуры

// Чтение XML файла и проверка версии правил обмена.
// Параметры:
//   ИмяФайлаОсобенностей - имя файла, из которого будут загружаться особенности.
//
Функция ПравилаОбменаДаннымиВерсии1_1_15ИлиВыше(ИмяФайлаОсобенностей)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайлаОсобенностей);
	ТекстДокумента = ТекстовыйДокумент.ПолучитьТекст();
	
	// Если в файле обмена данными нашли обращение к РС "НайденныеОшибки",
	// тогда считаем, что версия файла обмена данными для АПК 1.1.15 и выше.
	ПозицияВхождения = СтрНайти(ТекстДокумента, "<Приемник>РегистрСведенийЗапись.НайденныеОшибки</Приемник>");
	
	Возврат (ПозицияВхождения > 0);
	
КонецФункции

// Выгружает особенности из файла в конфигурацию.
// Параметры:
//   ИмяФайлаОсобенностей - имя файла куда будут загружаться особенности.
//   Конфигурация - Конфигурация, откуда будут загружаться особенности.
Процедура ВыгрузитьОсобенности(Знач ИмяФайла, Конфигурация, ВыгружатьАвтораОсобенности) Экспорт
	
	Если СтрДлина(ИмяФайла) = 0 Тогда
		Сообщение = НСтр("ru='Не удалось выгрузить особенности конфигурации <%1>, т.к. не задано имя файла выгрузки.'");
		Сообщение = СтрШаблон(Сообщение, Конфигурация.Наименование);
		Сообщить(Сообщение);
		Возврат;
	КонецЕсли;
	
	Версия = НайтиПоследнююВерсию(Конфигурация);
	Если НЕ ЗначениеЗаполнено(Версия) Тогда
		Сообщение = НСтр("ru='Не удалось выгрузить особенности конфигурации <%1>, т.к. не найдено версий с собранными данными.'");
		Сообщение = СтрШаблон(Сообщение, Конфигурация.Наименование);
		Сообщить(Сообщение);
		Возврат;
	КонецЕсли;
	
	Сообщение = НСтр("ru='Выгружаются особенности конфигурации <%1> по пути:%2%3'");
	Сообщение = СтрШаблон(Сообщение, Конфигурация.Наименование, Символы.ПС, ИмяФайла);
	Сообщить(Сообщение);
	
	ЭтоАрхив = Ложь;
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Расширение = ".zip" Тогда
		ЭтоАрхив = Истина;
		ИмяФайлаАрхива = ИмяФайла;
		ИмяФайла = КаталогВременныхФайлов() + Файл.ИмяБезРасширения + ".xml";
	КонецЕсли;
	
	Сообщение = НСтр("ru='Начало выгрузки.'");
	Сообщение = ДобавитьТекущуюДатуВКомментарий(Сообщение);
	Сообщить(Сообщение);
	
	Форма = Обработки.УниверсальныйОбменДаннымиXML.ПолучитьФорму("Форма");
	Форма.ИмяФайлаПравилОбмена = "Правила обмена данными";
	Форма.ИмяФайлаОбмена = ИмяФайла;
	Форма.Конфигурация = Конфигурация;
	Форма.Версия = Версия;
	Форма.КонфигурацияНаименование = Конфигурация.Наименование;
	Форма.НеВыводитьНикакихИнформационныхСообщенийПользователю = Истина;
	Форма.ВыгружатьАвтораОсобенности = ВыгружатьАвтораОсобенности;
	Форма.ВыполнитьВыгрузкуИзФормы();
	
	Если ЭтоАрхив Тогда
		ДобавитьФайлВАрхив(ИмяФайлаАрхива, ИмяФайла);
		
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
			Событие = НСтр("ru='Удаление временных файлов'", Метаданные.ОсновнойЯзык.КодЯзыка);
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
			Сообщение = СтрШаблон(НСтр("ru='Не удалось удалить файл особенностей ""%1"" по причине:
				|%2'"), ИмяФайла, ОписаниеОшибки);
			
			ЗаписьЖурналаРегистрации(Событие,,,, Сообщение);
		КонецПопытки;
	КонецЕсли;
	
	Сообщение = НСтр("ru='Выгрузка завершена.'");
	Сообщение = ДобавитьТекущуюДатуВКомментарий(Сообщение);
	Сообщить(Сообщение);
	
КонецПроцедуры

// Загружает верные слова в регистр "ВерныеСлова" в верхнем регистре из текстового файла.
//
Процедура ЗагрузитьРегистрВерныхСлов(ИмяФайла, ЗаменитьСлова) Экспорт
	
	Текст = Новый ТекстовыйДокумент;
	
	Попытка
		Текст.Прочитать(ИмяФайла);
	Исключение
		Сообщение = НСтр("ru='Не удалось прочитать файл %1'");
		Сообщение = СтрШаблон(Сообщение, ИмяФайла);
		Сообщить(Сообщение);
		Возврат;
	КонецПопытки;
	
	МассивВерныхСлов = Новый Массив;
	Для НомерСтроки = 1 По Текст.КоличествоСтрок() Цикл
		Строка = ВРег(СокрЛП(Текст.ПолучитьСтроку(НомерСтроки)));
		Если НЕ ПустаяСтрока(Строка) И МассивВерныхСлов.Найти(Строка) = Неопределено Тогда
			МассивВерныхСлов.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВерныеСлова.Слово
	|ИЗ
	|	РегистрСведений.ВерныеСлова КАК ВерныеСлова
	|ГДЕ
	|	ВерныеСлова.Слово В(&МассивВерныхСлов)";
	
	Запрос.УстановитьПараметр("МассивВерныхСлов", МассивВерныхСлов);
	МассивСуществующихСлов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Слово");
	
	Для Номер = 0 По МассивСуществующихСлов.Количество() - 1 Цикл
		МассивСуществующихСлов[Номер] = ВРег(МассивСуществующихСлов[Номер]);
	КонецЦикла;
	
	РегистрВерныхСлов = РегистрыСведений.ВерныеСлова.СоздатьНаборЗаписей();
	
	Для Каждого Слово Из МассивВерныхСлов Цикл
		Если ЗаменитьСлова Или МассивСуществующихСлов.Найти(Слово) = Неопределено Тогда
			НоваяЗапись = РегистрВерныхСлов.Добавить();
			НоваяЗапись.Слово = Слово;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		РегистрВерныхСлов.Записать(ЗаменитьСлова);
	Исключение
		Событие = НСтр("ru='Регистр верных слов'", Метаданные.ОсновнойЯзык.КодЯзыка);
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		Сообщение = СтрШаблон(НСтр("ru='Не удалось загрузить верные слова из файла ""%1"" по причине:
			|%2'"), ИмяФайла, ОписаниеОшибки);
		
		ЗаписьЖурналаРегистрации(Событие,,,, Сообщение);
	КонецПопытки;
	
КонецПроцедуры

// Выгружает верные слова из регистра "Верные слова" в текстовый файл
//
Процедура ВыгрузитьРегистрВерныхСлов(Знач ИмяФайла) Экспорт
	
	ЗапросПоСловам = Новый Запрос;
	ЗапросПоСловам.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерныеСлова.Слово
	|ИЗ
	|	РегистрСведений.ВерныеСлова КАК ВерныеСлова";
	
	МассивВыгружаемыхСлов = ЗапросПоСловам.Выполнить().Выгрузить().ВыгрузитьКолонку("Слово");
	
	Текст = Новый ТекстовыйДокумент;
	Для Каждого Слово Из МассивВыгружаемыхСлов Цикл
		Текст.ДобавитьСтроку(Слово);
	КонецЦикла;
	
	Попытка
		Текст.Записать(ИмяФайла);
	Исключение
		Событие = НСтр("ru='Регистр верных слов'", Метаданные.ОсновнойЯзык.КодЯзыка);
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		Сообщение = СтрШаблон(НСтр("ru='Не удалось выгрузить регистр верных слов ""%1"" по причине:
			|%2'"), ИмяФайла, ОписаниеОшибки);
		
		ЗаписьЖурналаРегистрации(Событие,,,, Сообщение);
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти