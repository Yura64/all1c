
#Область ПрочиеПроцедурыИФункции

Функция ПолучитьСтрокуЗапускаПредприятия(Конфигурация, КаталогКонфигурации, Пользователь, Пароль,
	ИмяОбработкиЗагрузчика, ИмяФайлаРезультата, ИмяФайлаЛога = "", ИспользоватьПривилегированныйРежим = Ложь,
	ОтключитьЛогикуНачалаРаботыСистемы = Ложь)
	
	Если ПустаяСтрока(ИмяФайлаЛога) Тогда
		ИмяФайлаЛога = ПолучитьИмяВременногоФайла("txt");
	КонецЕсли;
	
	// Определяем строку запуска платформы.
	СтрокаЗапускаПлатформы = Конфигурация.СтрокаЗапускаПлатформы;
	
	Если ПустаяСтрока(СтрокаЗапускаПлатформы) Тогда
		СтрокаЗапускаПлатформы = КаталогПрограммы() + "1cv8.exe";
	КонецЕсли;
	
	// Предприятие запускаем всегда в режиме толстого клиента.
	РежимЗапуска = ?(Конфигурация.ТолькоОбычныйРежим, " /RunModeOrdinaryApplication", "");
	СтрокаЗапуска = СтрокаЗапускаПлатформы + РежимЗапуска;
	
	// Для запуска базы проверяемой конфигурации.
	СтрокаЗапуска = СтрокаЗапуска
		+ СтрШаблон(" /F""%1"" /N""%2"" /P""%3""", КаталогКонфигурации, Пользователь, Пароль);
	
	ПараметрЗапускаПредприятия = ИмяФайлаРезультата;
	Если ОтключитьЛогикуНачалаРаботыСистемы Тогда
		ПараметрЗапускаПредприятия = ПараметрЗапускаПредприятия + "|ОтключитьЛогикуНачалаРаботыСистемы";
	КонецЕсли;
	
	// Параметры запуска:
	// %1 - путь к выполняемой обработке,
	// %2 - параметр запуска предприятия с путь к файлу и ключом "ОтключитьЛогикуНачалаРаботыСистемы",
	// %3 - путь к файлу лога запуска предприятия.
	СтрокаЗапуска = СтрокаЗапуска + СтрШаблон("/AU- /Execute ""%1"" /C ""%2"" /Out ""%3""",
		ИмяОбработкиЗагрузчика, ПараметрЗапускаПредприятия, ИмяФайлаЛога);
	
	СтрокаЗапуска = СтрокаЗапуска + " /DisableStartupMessages /DisableStartupDialogs";
	
	Если ИспользоватьПривилегированныйРежим Тогда
		// Устанавливаем принудительный привилегированный режим для получения форм и макетов без проверки прав доступа.
		СтрокаЗапуска = СтрокаЗапуска + " /UsePrivilegedMode";
	КонецЕсли;
	
	Возврат СтрокаЗапуска;
	
КонецФункции

#КонецОбласти

#Область ПолучениеСведенийИзПроверяемойКонфигурации

// Выполняет обработчик обновления информационной базы, если в конфигурации есть подсистема "СтандартныеПодсистемы".
//
Функция ВыполнитьОбработчикОбновления(Конфигурация, КаталогКонфигурации = "", Пользователь = "", Пароль = "") Экспорт
	
	ТекстОшибки = "";
	
	#Если Клиент Тогда
	
	ИмяОбработкиЗагрузчика = ПолучитьИмяВременногоФайла("epf");
	Экземпляр = ПолучитьОбщийМакет("ОбновлениеКонфигурации");
	Экземпляр.Записать(ИмяОбработкиЗагрузчика);
	
	ИмяФайлаЛога = ПолучитьИмяВременногоФайла("txt");
	ИмяФайлаЛогаРезультатовОбновления = ПолучитьИмяВременногоФайла("txt");
	
	// Определяем строку запуска предприятия с обработкой и переданным параметром.
	СтрокаЗапуска = ПолучитьСтрокуЗапускаПредприятия(Конфигурация, КаталогКонфигурации, Пользователь, Пароль,
		ИмяОбработкиЗагрузчика, ИмяФайлаЛогаРезультатовОбновления,,, Истина);
	
	КодВозврата = Неопределено;
	
	ЗапуститьПриложение(СтрокаЗапуска,, Истина, КодВозврата);
	
	Состояние("");
	
	ТекстРезультатаОбновления = ФайлПолучитьТекст(ИмяФайлаЛогаРезультатовОбновления);
	Статус = ФайлПолучитьТекст(ИмяФайлаЛога);
	
	ФайлУдалить(ИмяОбработкиЗагрузчика);
	
	Если (КодВозврата = 0) И ПустаяСтрока(Статус) И ПустаяСтрока(ТекстРезультатаОбновления) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстОшибки = НСтр("ru='Обработчики обновления завершились с ошибками.'")
		+ ?(ПустаяСтрока(Статус), "", Символы.ПС + Статус)
		+ ?(ПустаяСтрока(ТекстРезультатаОбновления), "", Символы.ПС + ТекстРезультатаОбновления);
	
	#КонецЕсли
	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти