
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыПисьма() Экспорт
	
	ПараметрыПисьма = Новый Структура;
	
	ПараметрыПисьма.Вставить("Тема", "");
	ПараметрыПисьма.Вставить("Тело", "");
	ПараметрыПисьма.Вставить("АдресПолучателя", "");
	ПараметрыПисьма.Вставить("ИмяПолучателя");
	ПараметрыПисьма.Вставить("АдресОтправителя");
	ПараметрыПисьма.Вставить("ИмяОтправителя");
	ПараметрыПисьма.Вставить("ПарольОтправителя");
	ПараметрыПисьма.Вставить("СерверИсходящейПочтыSMTP");
	ПараметрыПисьма.Вставить("ПользовательИсходящейПочты");
	ПараметрыПисьма.Вставить("ПортSMTP");
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Возвращает структуру с параметрами письма
//
Функция ПодготовитьПараметрыПисьма(ПараметрыПисьма)
	
	Если ПараметрыПисьма.ИмяПолучателя = Неопределено Тогда
		ПараметрыПисьма.ИмяПолучателя = ПараметрыПисьма.АдресПолучателя;
	КонецЕсли;
	
	Если ПараметрыПисьма.АдресОтправителя = Неопределено Тогда
		ПараметрыПисьма.АдресОтправителя = Константы.АдресЭлектроннойПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ИмяОтправителя = Неопределено Тогда
		ПараметрыПисьма.ИмяОтправителя = Константы.ИмяОтправителя.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПарольОтправителя = Неопределено Тогда
		ПараметрыПисьма.ПарольОтправителя = Константы.ПарольЭлектроннойПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.СерверИсходящейПочтыSMTP = Неопределено Тогда
		ПараметрыПисьма.СерверИсходящейПочтыSMTP = Константы.СерверИсходящейПочтыSMTP.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПользовательИсходящейПочты = Неопределено Тогда
		ПараметрыПисьма.ПользовательИсходящейПочты = Константы.ПользовательИсходящейПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПортSMTP = Неопределено Тогда
		ПараметрыПисьма.ПортSMTP = Константы.ПортSMTP.Получить();
	КонецЕсли;
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Отправляет письма о проверке конфигурации ответственным за ошибки.
//
Процедура ОтправитьПисьмаОтветственным(СтруктураПроверки, Текст, СтруктураШаблоновПисем, ФлагОшибка = Ложь) Экспорт
	
	Если НЕ ЗаполненыОсновныеПараметрыСистемнойЭлектроннойПочты() Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаВерсии = СтруктураПроверки.ПроверкаВерсии;
	ТаблицаЖурнала = СтруктураПроверки.ТаблицаЖурнала;
	Конфигурация = ПроверкаВерсии.Конфигурация;
	
	Если ФлагОшибка Тогда
		ОбщийТекст = НСтр("ru='Возникли ошибки при проверке конфигурации %1 средствами АПК.'");
	Иначе
		ОбщийТекст = НСтр("ru='Выполнена проверка %1 средствами АПК.'");
	КонецЕсли;
	
	ОбщийТекст = СтрШаблон(ОбщийТекст, Конфигурация);
	
	ТекстПисьмаОтветственному = СформироватьТекстПисьма(ОбщийТекст, СтруктураШаблоновПисем.ШаблонПисьмаОтветственному,
		Текст, ФлагОшибка);
	
	ТекстТемаПисьмаОтветственному = ?(ЗначениеЗаполнено(СтруктураШаблоновПисем.ШаблонТемыПисьмаОтветственному),
		СтруктураШаблоновПисем.ШаблонТемыПисьмаОтветственному,
		ОбщийТекст + ?(ФлагОшибка, "", " " + Текст));
	
	// Формирование отчета количества ошибок по ответственным.
	ТабДокументОтчет = Новый ТабличныйДокумент;
	ТаблицаЗначенийОтчет = Новый ТаблицаЗначений;
	ТаблицаЗначенийОтчет.Колонки.Добавить("Ответственный");
	ТаблицаЗначенийОтчет.Колонки.Добавить("Счетчик");
	ТекстHTML = Неопределено;
	
	Если НЕ ФлагОшибка Тогда
		СформироватьОтчетОшибок(Конфигурация, ТабДокументОтчет, ТаблицаЗначенийОтчет);
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".HTML");
		ТабДокументОтчет.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML3);
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяВременногоФайла);
		ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
		ФайлУдалить(ИмяВременногоФайла);
		
		НачалоПисьма = ОбщийТекст + Символы.ПС + НСтр("ru='Сводка по ошибкам:'") + Символы.ПС;
		ТекстHTML = РазборФайловHTML.ДобавитьОбычныйТекстВТекстHTML(ТекстHTML, НачалоПисьма);
		
	КонецЕсли;
	
	ОтветственныйЗаКонфигурацию = Конфигурация.ОтветственныйЗаКонфигурацию;
	
	Если НЕ ПустаяСтрока(ОтветственныйЗаКонфигурацию.АдресЭлектроннойПочты)
		И ОтветственныйЗаКонфигурацию.ФлагРассылки Тогда
		
		СтрокаТЗ = ТаблицаЗначенийОтчет.Добавить();
		СтрокаТЗ.Ответственный = ОтветственныйЗаКонфигурацию;
	КонецЕсли;
	
	ТаблицаЗначенийОтчет.Свернуть("Ответственный", "Счетчик");
	
	РезультатОтправкиПисем = "";
	ЕстьОтветственныеДляОтправкиПисем = Ложь;
	
	СтруктураЗначений = Новый Структура;
	СтруктураЗначений.Вставить("ИмяКонфигурации", Конфигурация.Наименование);
	СтруктураЗначений.Вставить("КоличествоОшибок", ПроверкаВерсии.ОбнаруженоОшибок);
	СтруктураЗначений.Вставить("ИмяПользователя");
	СтруктураЗначений.Вставить("ДатаПроверки", ПроверкаВерсии.Дата);
	
	// Формирование и отправка писем ответственным за ошибки.
	Для Каждого СтрокаТаблицы Из ТаблицаЗначенийОтчет Цикл
		
		ОтветственныйЗаОшибки = СтрокаТаблицы.Ответственный;
		Если НЕ ЗначениеЗаполнено(ОтветственныйЗаОшибки) Тогда
			Продолжить;
		КонецЕсли;
		
		АдресЭлектроннойПочты = ОтветственныйЗаОшибки.АдресЭлектроннойПочты;
		
		Если ПустаяСтрока(АдресЭлектроннойПочты) ИЛИ (НЕ ОтветственныйЗаОшибки.ФлагРассылки) Тогда
			Продолжить;
		КонецЕсли;
		
		ОтправкаПисьмаОтветственномуЗаКонфигурацию = (СтрокаТаблицы.Ответственный = ОтветственныйЗаКонфигурацию);
		
		КоличествоОшибок = СтрокаТаблицы.Счетчик;
		СтруктураЗначений.ИмяПользователя = ОтветственныйЗаОшибки;
		СтруктураЗначений.КоличествоОшибок = ?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, ПроверкаВерсии.ОбнаруженоОшибок,
			КоличествоОшибок);
		
		ТекстОшибки = ЧислоПрописью(КоличествоОшибок, НСтр("ru='Л=ru_RU'"), НСтр("ru='ошибка, ошибки, ошибок, ж,,,,, 0'"));
		МассивСлов = СтрРазделить(ТекстОшибки, " ", Ложь);
		СловоОшибки = МассивСлов[МассивСлов.ВГраница()];
		СтрокаСКоличествомОшибок = СтрШаблон(НСтр("ru='Разработчик %1 - %2 %3 АПК.'"),
			ОтветственныйЗаОшибки, КоличествоОшибок, СловоОшибки);
		
		ТелоПисьмаРазработчику = ?(ЗначениеЗаполнено(СтруктураШаблоновПисем.ШаблонПисьмаРазработчику),
			СтруктураШаблоновПисем.ШаблонПисьмаРазработчику,
			СтрокаСКоличествомОшибок);
		
		ТекстТемаПисьмаРазработчику = ?(ЗначениеЗаполнено(СтруктураШаблоновПисем.ШаблонТемыПисьмаРазработчику),
			СтруктураШаблоновПисем.ШаблонТемыПисьмаРазработчику,
			СтрШаблон(НСтр("ru='%1 Количество обнаруженных ошибок: %2'"), ОбщийТекст, КоличествоОшибок));
		
		ЕстьОтветственныеДляОтправкиПисем = Истина;
		
		ТемаПисьма = ?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, ТекстТемаПисьмаОтветственному,
			ТекстТемаПисьмаРазработчику);
		ТемаПисьма = ЗаменитьПараметрыШаблонаЗначениями(ТемаПисьма, СтруктураЗначений);
		ТелоПисьма = ?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, ТекстПисьмаОтветственному, ТелоПисьмаРазработчику);
		ТелоПисьма = ЗаменитьПараметрыШаблонаЗначениями(ТелоПисьма, СтруктураЗначений);
		
		ПараметрыПисьма = ПолучитьПараметрыПисьма();
		ПараметрыПисьма.Тело = ТелоПисьма;
		ПараметрыПисьма.Тема = ТемаПисьма;
		ПараметрыПисьма.АдресПолучателя = АдресЭлектроннойПочты;
		ПараметрыПисьма.ИмяПолучателя = ОтветственныйЗаОшибки.Наименование;
		
		ПараметрыПисьма = ПодготовитьПараметрыПисьма(ПараметрыПисьма);
		
		ОписаниеОшибки = "";
		ТекущийТекстHTML = ?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, ТекстHTML, Неопределено);
		УспешноеВыполнение = ОтправитьСообщение(ПараметрыПисьма, ОписаниеОшибки, ТекущийТекстHTML,, Ложь);
		Если УспешноеВыполнение Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Отправлено письмо %1 по адресу %2'"),
			?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, "ответственному", "разработчику"), АдресЭлектроннойПочты);
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru='Не удалось отправить письмо %1 по адресу %2.
				|%3'"), ?(ОтправкаПисьмаОтветственномуЗаКонфигурацию, "ответственному", "разработчику"), АдресЭлектроннойПочты,
				ОписаниеОшибки);
		КонецЕсли;
		
		РезультатОтправкиПисем = СтрШаблон("%1%2%3", РезультатОтправкиПисем, Символы.ПС, ТекстСообщения);
		
	КонецЦикла;
	
	Если НЕ ЕстьОтветственныеДляОтправкиПисем Тогда
		Возврат;
	КонецЕсли;
	
	// Запишем результат отправки писем в журнал документа проверки версии.
	ЖурналПроверки = ПроверкаВерсии.ЖурналПроверки;
	СообщениеОбОтправке = НСтр("ru='Выполняется отправка писем ответственным:'") + РезультатОтправкиПисем;
	Зафиксировать(Конфигурация, УровеньЖурналаРегистрации.Информация, СообщениеОбОтправке, ЖурналПроверки, ТаблицаЖурнала);
	
	ДокументПроверкиОбъект = ПроверкаВерсии.ПолучитьОбъект();
	ДокументПроверкиОбъект.ЖурналПроверки = ЖурналПроверки;
	ДокументПроверкиОбъект.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

Функция СформироватьТекстПисьма(ОбщийТекст, ТекущийШаблонПисьма, Текст, ФлагОшибка)
	
	ШаблонПисьма = "";
	Если ФлагОшибка Тогда
		ТекстПисьма = ОбщийТекст + Символы.ПС + НСтр("ru='Журнал проверки:'") + Символы.ПС + Текст;
	ИначеЕсли ЗначениеЗаполнено(ТекущийШаблонПисьма) Тогда
		ТекстПисьма = СокрЛП(ТекущийШаблонПисьма);
	Иначе
		ТекстПисьма = ОбщийТекст + Символы.ПС + Текст;
	КонецЕсли;
	
	Возврат ТекстПисьма;
	
КонецФункции

Функция ЗаменитьПараметрыШаблонаЗначениями(ЗаполняемаяСтрока, СтруктураЗначений) Экспорт
	
	ЗаполняемаяСтрока = СтрЗаменить(ЗаполняемаяСтрока, "[ИмяКонфигурации]", СтруктураЗначений.ИмяКонфигурации);
	ЗаполняемаяСтрока = СтрЗаменить(ЗаполняемаяСтрока, "[КоличествоОшибок]", СтруктураЗначений.КоличествоОшибок);
	ЗаполняемаяСтрока = СтрЗаменить(ЗаполняемаяСтрока, "[ИмяПользователя]", СтруктураЗначений.ИмяПользователя);
	ЗаполняемаяСтрока = СтрЗаменить(ЗаполняемаяСтрока, "[ДатаПроверки]",
		Формат(СтруктураЗначений.ДатаПроверки, "ДЛФ=ДД"));
	
	Возврат ЗаполняемаяСтрока;
	
КонецФункции

// Отправляет письмо по параметрам письма
//
Функция ОтправитьСообщение(ПараметрыПисьма, ОписаниеОшибки = "", ТекстHTML = Неопределено, РазделительАдресов = ";",
	ОтправлятьТелоПисьмаПередТекстомHTML = Истина) Экспорт
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = ПараметрыПисьма.Тема;
	
	ИмяПолучателя = ПараметрыПисьма.ИмяПолучателя;
	
	// Заполняем адреса получателей письма.
	МассивАдресов = СтрРазделить(ПараметрыПисьма.АдресПолучателя, РазделительАдресов, Ложь);
	Для Каждого АдресПолучателя Из МассивАдресов Цикл
		АдресПолучателя = СокрЛП(АдресПолучателя);
		Получатель = Письмо.Получатели.Добавить(АдресПолучателя);
		Получатель.ОтображаемоеИмя = ?(ЗначениеЗаполнено(ИмяПолучателя), ИмяПолучателя, АдресПолучателя);
	КонецЦикла;
	
	// Добавляем к письму имя отправителя.
	Письмо.ИмяОтправителя              = ПараметрыПисьма.ИмяОтправителя;
	Письмо.Отправитель.ОтображаемоеИмя = ПараметрыПисьма.ИмяОтправителя;
	Письмо.Отправитель.Адрес           = ПараметрыПисьма.АдресОтправителя;
	
	// Если текст HTML не определен, тогда добавляем обычный текст.
	Если ТекстHTML = Неопределено Тогда
		Текст = Письмо.Тексты.Добавить(ПараметрыПисьма.Тело, ТипТекстаПочтовогоСообщения.ПростойТекст);
	Иначе
		// Иначе добавим текст из тела письма в HTML.
		НовыйТекстHTML = РазборФайловHTML.ДобавитьОбычныйТекстВТекстHTML(ТекстHTML, ПараметрыПисьма.Тело,
			ОтправлятьТелоПисьмаПередТекстомHTML);
		Текст = Письмо.Тексты.Добавить(НовыйТекстHTML, ТипТекстаПочтовогоСообщения.HTML);
		Письмо.ОбработатьТексты();
	КонецЕсли;
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.Пользователь       = ПараметрыПисьма.ПользовательИсходящейПочты;
	Профиль.Пароль             = ПараметрыПисьма.ПарольОтправителя;
	Профиль.ВремяОжидания      = 30;
	Профиль.АдресСервераSMTP   = ПараметрыПисьма.СерверИсходящейПочтыSMTP;
	Профиль.ПортSMTP           = ПараметрыПисьма.ПортSMTP;
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
	Профиль.ИспользоватьSSLSMTP= Истина;
	Профиль.ПользовательSMTP   = ПараметрыПисьма.ПользовательИсходящейПочты;
	Профиль.ПарольSMTP         = Профиль.Пароль;
	
	Попытка
		Соединение = Новый ИнтернетПочта;
		Соединение.Подключиться(Профиль);
		Соединение.Послать(Письмо);
		Соединение.Отключиться();
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

// Заполняет настройки константы "ПортSMTP" по умолчанию
//
Функция ЗаполнениеНастроекПоУмолчанию() Экспорт
	
	ПортSMTP = Константы.ПортSMTP.Получить();
	Если ПортSMTP = 0 Тогда
		Константы.ПортSMTP.Установить(25);
	КонецЕсли;
	
КонецФункции

// Отправляет письма ответственным о назначении им новых ошибок.
//
Процедура ОтправитьПисьмаОтветственнымОПереназначенныхОшибках() Экспорт
	
	Если НЕ ЗаполненыОсновныеПараметрыСистемнойЭлектроннойПочты() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УведомленияОтветственных.Получатель КАК Получатель,
	|	УведомленияОтветственных.Получатель.Наименование КАК ИмяПолучателя,
	|	УведомленияОтветственных.Получатель.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	|	УведомленияОтветственных.Получатель.ФлагРассылки КАК ФлагРассылки,
	|	УведомленияОтветственных.Конфигурация КАК Конфигурация,
	|	УведомленияОтветственных.Конфигурация.Наименование КАК ИмяКонфигурации,
	|	УведомленияОтветственных.Отправитель КАК Отправитель,
	|	УведомленияОтветственных.Отправитель.Наименование КАК ИмяОтправителя,
	|	УведомленияОтветственных.ОбъектыМетаданных КАК ОбъектыМетаданных,
	|	УведомленияОтветственных.КоличествоОшибок КАК КоличествоОшибок
	|ИЗ
	|	РегистрСведений.УведомленияОтветственных КАК УведомленияОтветственных
	|ИТОГИ ПО
	|	Получатель";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	МассивПолучателей = Новый Массив;
	
	ВыборкаПолучатель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПолучатель.Следующий() Цикл
		
		АдресЭлектроннойПочты = ВыборкаПолучатель.АдресЭлектроннойПочты;
		Если ПустаяСтрока(АдресЭлектроннойПочты) ИЛИ (НЕ ВыборкаПолучатель.ФлагРассылки) Тогда
			Продолжить;
		КонецЕсли;
		
		ТемаПисьма = НСтр("ru='Вам направлены ошибки АПК (%1)'");
		ТекстПисьма = "";
		
		ОбщееКоличествоОшибок = 0;
		
		ВыборкаДетальныеЗаписи = ВыборкаПолучатель.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			КоличествоОшибок = ВыборкаДетальныеЗаписи.КоличествоОшибок;
			ОбщееКоличествоОшибок = ОбщееКоличествоОшибок + КоличествоОшибок;
			
			// Получим правильное склонение слова "ошибки" (направил 1 ошибку, 2 ошибки, 5 ошибок).
			ТекстОшибки = ЧислоПрописью(КоличествоОшибок, НСтр("ru='Л=ru_RU'"), НСтр("ru='ошибку, ошибки, ошибок, ж,,,,, 0'"));
			МассивСлов = СтрРазделить(ТекстОшибки, " ", Ложь);
			СловоОшибки = МассивСлов[МассивСлов.ВГраница()];
			
			ТекстПисьма = СтрШаблон(НСтр("ru='%1Пользователь %2 направил Вам %3 %4 в конфигурации ""%5"" по следующим объектам метаданных:%6'"),
				ТекстПисьма,
				ВыборкаДетальныеЗаписи.ИмяОтправителя,
				КоличествоОшибок,
				СловоОшибки,
				ВыборкаДетальныеЗаписи.ИмяКонфигурации,
				Символы.ПС);
			
			МассивПутейОбъектов = Новый Массив;
			
			ОбъектыМетаданных = ВыборкаДетальныеЗаписи.ОбъектыМетаданных.Получить();
			Если ЗначениеЗаполнено(ОбъектыМетаданных) Тогда
				Для Каждого ОбъектМетаданных Из ОбъектыМетаданных Цикл
					МассивПутейОбъектов.Добавить(ОбъектМетаданных.Путь);
				КонецЦикла;
			КонецЕсли;
			
			ТекстОбъектовМетаданных = СтрСоединить(МассивПутейОбъектов, Символы.ПС);
			
			ТекстПисьма = ТекстПисьма + ТекстОбъектовМетаданных + Символы.ПС + Символы.ПС;
			
		КонецЦикла;
		
		ТемаПисьма = СтрШаблон(ТемаПисьма, ОбщееКоличествоОшибок);
		
		ПараметрыПисьма = ПолучитьПараметрыПисьма();
		ПараметрыПисьма.Тело = ТекстПисьма;
		ПараметрыПисьма.Тема = ТемаПисьма;
		ПараметрыПисьма.АдресПолучателя = АдресЭлектроннойПочты;
		ПараметрыПисьма.ИмяПолучателя = ВыборкаПолучатель.ИмяПолучателя;
		
		ПараметрыПисьма = ПодготовитьПараметрыПисьма(ПараметрыПисьма);
		
		УспешноеВыполнение = ОтправитьСообщение(ПараметрыПисьма, "");
		Если УспешноеВыполнение Тогда
			МассивПолучателей.Добавить(ВыборкаПолучатель.Получатель);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивПолучателей.Количество() > 0 Тогда
		УдалитьЗаписиВРегистреУведомленияОтветственных(МассивПолучателей);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
