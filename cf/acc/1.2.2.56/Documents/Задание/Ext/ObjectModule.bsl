#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область Обработчики

// Обработчик перед записью документа
// Синхронизирует конфигурацию по версии.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Версия.Владелец <> Конфигурация Тогда
		Конфигурация = Версия.Владелец;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку конфигурации в соответствии с
// переданным списком требований.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Определяем последний номер версии
	ЗапросПоНомеру = Новый Запрос;
	ЗапросПоНомеру.Текст = "
	|ВЫБРАТЬ
	|	ВерсииОбъектов.НомерВерсии КАК НомерВерсии,
	|	ВерсииОбъектов.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
	|ГДЕ
	|	ВерсииОбъектов.Объект = &Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	ВерсииОбъектов.Объект,
	|	ВерсииОбъектов.НомерВерсии
	|ИТОГИ
	|	МАКСИМУМ(НомерВерсии)
	|ПО
	|	Объект";
	
	ЗапросПоНомеру.УстановитьПараметр("Объект", Ссылка);
	
	ВыборкаНомеров = ЗапросПоНомеру.Выполнить().Выбрать();
	
	Если ВыборкаНомеров.Следующий() Тогда
		НомерВерсии = ВыборкаНомеров.НомерВерсии + 1;
	Иначе
		НомерВерсии = 1;
	КонецЕсли;
	
	// Формируем версию в регистре версий
	НоваяЗапись = РегистрыСведений.ВерсииОбъектов.СоздатьМенеджерЗаписи();
	НоваяЗапись.ДатаВерсии = ТекущаяДатаСеанса();
	НоваяЗапись.Объект = Ссылка;
	НоваяЗапись.НомерВерсии = НомерВерсии;
	НоваяЗапись.ВерсияОбъекта = Новый ХранилищеЗначения(СформироватьТабличныйДокумент());
	
	НоваяЗапись.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

// Возвращает представление документа в виде табличного документа.
//
Функция СформироватьТабличныйДокумент()
	
	// Делаем выборку ошибок
	НомераОшибок = Ошибки.ВыгрузитьКолонку("Номер");
	
	ЗапросПоОшибкам = Новый Запрос;
	ЗапросПоОшибкам.Текст = "
	|ВЫБРАТЬ
	|	НайденныеОшибки.Объект.Путь КАК Объект,
	|	НайденныеОшибки.Номер КАК Номер,
	|	НайденныеОшибки.Ошибка.Наименование КАК Ошибка,
	|	НайденныеОшибки.Состояние КАК Состояние,
	|	НайденныеОшибки.Ответственный КАК Ответственный,
	|	НайденныеОшибки.МестоОбнаружения КАК МестоОбнаружения,
	|	НайденныеОшибки.Уточнение КАК Уточнение
	|ИЗ
	|	РегистрСведений.НайденныеОшибки КАК НайденныеОшибки
	|ГДЕ
	|	НайденныеОшибки.Номер В(&НомераОшибок)";
	
	ЗапросПоОшибкам.УстановитьПараметр("НомераОшибок", НомераОшибок);
	
	Выборка = ЗапросПоОшибкам.Выполнить().Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	МакетОформления = ПолучитьМакет("ЗаданиеНаИсправлениеОшибок");
	
	Заголовок = СтрШаблон(НСтр("ru='Задание на исправление ошибок №%1 от %2'"), Номер, Дата);
	
	МакетОформления.Параметры.Заголовок = Заголовок;
	МакетОформления.Параметры.Конфигурация = Конфигурация;
	МакетОформления.Параметры.Версия = Версия;
	МакетОформления.Параметры.Ответственный = Ответственный;
	
	ТабДокумент.Присоединить(МакетОформления.ПолучитьОбласть("Заголовок"));
	
	Пока Выборка.Следующий() Цикл
		МакетОформления.Параметры.Объект = Выборка.Объект;
		МакетОформления.Параметры.Номер = Выборка.Номер;
		МакетОформления.Параметры.Ошибка = Выборка.Ошибка;
		МакетОформления.Параметры.Состояние = Выборка.Состояние;
		МакетОформления.Параметры.Место = Выборка.МестоОбнаружения;
		МакетОформления.Параметры.Уточнение = Выборка.Уточнение;
		
		ТабДокумент.Присоединить(МакетОформления.ПолучитьОбласть("Ошибка"));
		
	КонецЦикла;
	
	ТабДокумент.Показать();
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли